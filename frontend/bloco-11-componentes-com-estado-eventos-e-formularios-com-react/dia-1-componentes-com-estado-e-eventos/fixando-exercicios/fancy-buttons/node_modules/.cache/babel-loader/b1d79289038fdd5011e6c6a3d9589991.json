{"ast":null,"code":"var _jsxFileName = \"/home/viieorathi/trybe-exercicios/frontend/bloco-11-componentes-com-estado-eventos-e-formularios-com-react/dia-1-componentes-com-estado-e-eventos/fixando-exercicios/fancy-buttons/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(); // A função abaixo vincula \"manualmente\" o `this` à nossa função\n    // this.handleClick = this.handleClick.bind(this)\n\n    this.handleClick = () => {\n      /* Agora esse log retorna o objeto `this`, já acessível para nossa função!\n      Com isso, podemos acessar as `props`, estado do componente (ainda vamos ver como!)\n      e tudo o mais daqui de dentro */\n      console.log(this);\n      console.log('Clicou!');\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.handleClick,\n      children: \"Meu bot\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/viieorathi/trybe-exercicios/frontend/bloco-11-componentes-com-estado-eventos-e-formularios-com-react/dia-1-componentes-com-estado-e-eventos/fixando-exercicios/fancy-buttons/src/App.js"],"names":["React","App","Component","constructor","handleClick","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ,YADY,CAEZ;AACA;;AAHY,SAMdC,WANc,GAMA,MAAM;AAClB;AACJ;AACA;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,KAZa;AAIb;;AAUDC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAQ,MAAA,OAAO,EAAE,KAAKH,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAjB+B;;AAoBlC,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    // A função abaixo vincula \"manualmente\" o `this` à nossa função\n    // this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick = () => {\n    /* Agora esse log retorna o objeto `this`, já acessível para nossa função!\n    Com isso, podemos acessar as `props`, estado do componente (ainda vamos ver como!)\n    e tudo o mais daqui de dentro */\n    console.log(this)\n    console.log('Clicou!')\n  }\n\n  render() {\n    return <button onClick={this.handleClick}>Meu botão</button>\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}