{"ast":null,"code":"var _jsxFileName = \"/home/viieorathi/trybe-exercicios/frontend/bloco-11-componentes-com-estado-eventos-e-formularios-com-react/dia-1-componentes-com-estado-e-eventos/fixando-exercicios/fancy-buttons/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    /* Para definir um estado inicial ao componente, a ser definido\n    no momento em que o componente for colocado na tela, faça uma atribuição\n    de um objeto à chave `state` do `this`, ou seja, ao `this.state`*/\n\n    this.handleItalo = () => {\n      this.setState((estadoAnterior, _propsp) => ({\n        numerodeItalos: estadoAnterior.numerodeItalos + 1\n      }));\n    };\n\n    this.handleDouglas = () => handleClick = () => {\n      /* Você **NUNCA** deve fazer atribuições diretamente a `this.state`. Deve,\n      ao invés disso, SEMPRE utilizar a função `this.setState(novoEstado)` do\n      React*/\n      // this.setState = {\n      //   numeroDeCliques: 1\n      // }\n      this.setState((estadoAnterior, _props) => ({\n        numeroDeCliques: estadoAnterior.numeroDeCliques + 1\n      }));\n      console.log(this);\n    };\n\n    this.state = {\n      numeroDeCliques: 0,\n      numerodeItalos: 0,\n      numerodeDouglas: 0\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleItalo = this.handleItalo.bind(this);\n    this.handleDouglas = this.handleDouglas.bind(this);\n  }\n\n  render() {\n    /*Para LER o estado, você pode usar `this.state.chaveDoMeuEstado`*/\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.handleClick,\n      children: this.state.numeroDeCliques\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/viieorathi/trybe-exercicios/frontend/bloco-11-componentes-com-estado-eventos-e-formularios-com-react/dia-1-componentes-com-estado-e-eventos/fixando-exercicios/fancy-buttons/src/App.js"],"names":["React","App","Component","constructor","handleItalo","setState","estadoAnterior","_propsp","numerodeItalos","handleDouglas","handleClick","_props","numeroDeCliques","console","log","state","numerodeDouglas","bind","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AACA;AACJ;AACA;;AAJgB,SAgBdC,WAhBc,GAgBA,MAAM;AAClB,WAAKC,QAAL,CAAc,CAACC,cAAD,EAAiBC,OAAjB,MAA8B;AAC1CC,QAAAA,cAAc,EAAEF,cAAc,CAACE,cAAf,GAAgC;AADN,OAA9B,CAAd;AAGD,KApBa;;AAAA,SAsBdC,aAtBc,GAsBE,MAEhBC,WAAW,GAAG,MAAM;AAClB;AACJ;AACA;AACI;AACA;AACA;AACA,WAAKL,QAAL,CAAc,CAACC,cAAD,EAAiBK,MAAjB,MAA6B;AACzCC,QAAAA,eAAe,EAAEN,cAAc,CAACM,eAAf,GAAiC;AADT,OAA7B,CAAd;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,KAnCa;;AAKZ,SAAKC,KAAL,GAAa;AACXH,MAAAA,eAAe,EAAE,CADN;AAEXJ,MAAAA,cAAc,EAAE,CAFL;AAGXQ,MAAAA,eAAe,EAAE;AAHN,KAAb;AAMA,SAAKN,WAAL,GAAmB,KAAKA,WAAL,CAAiBO,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKb,WAAL,GAAmB,KAAKA,WAAL,CAAiBa,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKR,aAAL,GAAqB,KAAKA,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAuBDC,EAAAA,MAAM,GAAG;AACP;AACA,wBACE;AAAQ,MAAA,OAAO,EAAE,KAAKR,WAAtB;AAAA,gBAAoC,KAAKK,KAAL,CAAWH;AAA/C;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AA3C+B;;AA8ClC,eAAeX,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    /* Para definir um estado inicial ao componente, a ser definido\n    no momento em que o componente for colocado na tela, faça uma atribuição\n    de um objeto à chave `state` do `this`, ou seja, ao `this.state`*/\n    this.state = {\n      numeroDeCliques: 0,\n      numerodeItalos: 0,\n      numerodeDouglas: 0,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleItalo = this.handleItalo.bind(this);\n    this.handleDouglas = this.handleDouglas.bind(this);\n  }\n\n  handleItalo = () => {\n    this.setState((estadoAnterior, _propsp) => ({\n      numerodeItalos: estadoAnterior.numerodeItalos + 1,\n    }));\n  };\n\n  handleDouglas = () => \n\n  handleClick = () => {\n    /* Você **NUNCA** deve fazer atribuições diretamente a `this.state`. Deve,\n    ao invés disso, SEMPRE utilizar a função `this.setState(novoEstado)` do\n    React*/\n    // this.setState = {\n    //   numeroDeCliques: 1\n    // }\n    this.setState((estadoAnterior, _props) => ({\n      numeroDeCliques: estadoAnterior.numeroDeCliques + 1,\n    }));\n    console.log(this);\n  };\n\n  render() {\n    /*Para LER o estado, você pode usar `this.state.chaveDoMeuEstado`*/\n    return (\n      <button onClick={this.handleClick}>{this.state.numeroDeCliques}</button>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}