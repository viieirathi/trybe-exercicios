{"ast":null,"code":"var _jsxFileName = \"/home/viieorathi/trybe-exercicios/frontend/bloco-11-componentes-com-estado-eventos-e-formularios-com-react/dia-1-componentes-com-estado-e-eventos/fixando-exercicios/fancy-buttons/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    /* Para definir um estado inicial ao componente, a ser definido\n    no momento em que o componente for colocado na tela, faça uma atribuição\n    de um objeto à chave `state` do `this`, ou seja, ao `this.state`*/\n\n    this.handleItalo = () => {\n      this.setState((estadoAnterior, _props) => ({\n        numeroDeItalos: estadoAnterior.numeroDeItalos + 1\n      }));\n    };\n\n    this.handleDouglas = () => {\n      this.setState((estadoAnterior, _props) => ({\n        numeroDeDouglas: estadoAnterior.numeroDeDouglas + 1\n      }));\n    };\n\n    this.handleClick = () => {\n      /* Você **NUNCA** deve fazer atribuições diretamente a `this.state`. Deve,\n      ao invés disso, SEMPRE utilizar a função `this.setState(novoEstado)` do\n      React*/\n      this.setState((estadoAnterior, _props) => ({\n        numeroDeCliques: estadoAnterior.numeroDeCliques + 1\n      }));\n    };\n\n    this.classColors = num => num % 2 === 0 ? 'green' : 'white';\n\n    this.state = {\n      numeroDeCliques: 0,\n      numeroDeItalos: 0,\n      numeroDeDouglas: 0\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleItalo = this.handleItalo.bind(this);\n    this.handleDouglas = this.handleDouglas.bind(this);\n  }\n\n  render() {\n    const {\n      numeroDeCliques,\n      numeroDeItalos,\n      numeroDeDouglas\n    } = this.state;\n    /*Para LER o estado, você pode usar `this.state.chaveDoMeuEstado`*/\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        style: {\n          backgroundColor: this.classColors(numeroDeCliques)\n        },\n        children: [\"Botao: \", this.state.numeroDeCliques]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleDouglas,\n        style: {\n          backgroundColor: this.classColors(numeroDeDouglas)\n        },\n        children: [\"Botao:\", this.state.numeroDeDouglas]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleItalo,\n        style: {\n          backgroundColor: this.classColors(numeroDeItalos)\n        },\n        children: [\"Botao:\", this.state.numeroDeItalos]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/viieorathi/trybe-exercicios/frontend/bloco-11-componentes-com-estado-eventos-e-formularios-com-react/dia-1-componentes-com-estado-e-eventos/fixando-exercicios/fancy-buttons/src/App.js"],"names":["React","App","Component","constructor","handleItalo","setState","estadoAnterior","_props","numeroDeItalos","handleDouglas","numeroDeDouglas","handleClick","numeroDeCliques","classColors","num","state","bind","render","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AACA;AACJ;AACA;;AAJgB,SAgBdC,WAhBc,GAgBA,MAAM;AAClB,WAAKC,QAAL,CAAc,CAACC,cAAD,EAAiBC,MAAjB,MAA6B;AACzCC,QAAAA,cAAc,EAAEF,cAAc,CAACE,cAAf,GAAgC;AADP,OAA7B,CAAd;AAGD,KApBa;;AAAA,SAsBdC,aAtBc,GAsBE,MAAM;AACpB,WAAKJ,QAAL,CAAc,CAACC,cAAD,EAAiBC,MAAjB,MAA6B;AACzCG,QAAAA,eAAe,EAAEJ,cAAc,CAACI,eAAf,GAAiC;AADT,OAA7B,CAAd;AAGD,KA1Ba;;AAAA,SA2BdC,WA3Bc,GA2BA,MAAM;AAClB;AACJ;AACA;AACI,WAAKN,QAAL,CAAc,CAACC,cAAD,EAAiBC,MAAjB,MAA6B;AACzCK,QAAAA,eAAe,EAAEN,cAAc,CAACM,eAAf,GAAiC;AADT,OAA7B,CAAd;AAGD,KAlCa;;AAAA,SAoCdC,WApCc,GAoCCC,GAAD,IAASA,GAAG,GAAG,CAAN,KAAY,CAAZ,GAAgB,OAAhB,GAA0B,OApCnC;;AAKZ,SAAKC,KAAL,GAAa;AACXH,MAAAA,eAAe,EAAE,CADN;AAEXJ,MAAAA,cAAc,EAAE,CAFL;AAGXE,MAAAA,eAAe,EAAE;AAHN,KAAb;AAMA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBK,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKZ,WAAL,GAAmB,KAAKA,WAAL,CAAiBY,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKP,aAAL,GAAqB,KAAKA,aAAL,CAAmBO,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAwBDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA,eAAF;AAAmBJ,MAAAA,cAAnB;AAAmCE,MAAAA;AAAnC,QAAuD,KAAKK,KAAlE;AACA;;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACA;AACA,QAAA,OAAO,EAAE,KAAKJ,WADd;AAEA,QAAA,KAAK,EAAE;AAAEO,UAAAA,eAAe,EAAE,KAAKL,WAAL,CAAiBD,eAAjB;AAAnB,SAFP;AAAA,8BAGS,KAAKG,KAAL,CAAWH,eAHpB;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAKA;AACA,QAAA,OAAO,EAAE,KAAKH,aADd;AAEA,QAAA,KAAK,EAAE;AAAES,UAAAA,eAAe,EAAE,KAAKL,WAAL,CAAiBH,eAAjB;AAAnB,SAFP;AAAA,6BAEqE,KAAKK,KAAL,CAAWL,eAFhF;AAAA;AAAA;AAAA;AAAA;AAAA,cALA,eAQA;AAAQ,QAAA,OAAO,EAAE,KAAKN,WAAtB;AACA,QAAA,KAAK,EAAE;AAAEc,UAAAA,eAAe,EAAE,KAAKL,WAAL,CAAiBL,cAAjB;AAAnB,SADP;AAAA,6BACoE,KAAKO,KAAL,CAAWP,cAD/E;AAAA;AAAA;AAAA;AAAA;AAAA,cARA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AAxD+B;;AA6DlC,eAAeP,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\"\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    /* Para definir um estado inicial ao componente, a ser definido\n    no momento em que o componente for colocado na tela, faça uma atribuição\n    de um objeto à chave `state` do `this`, ou seja, ao `this.state`*/\n    this.state = {\n      numeroDeCliques: 0,\n      numeroDeItalos: 0,\n      numeroDeDouglas: 0,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleItalo = this.handleItalo.bind(this);\n    this.handleDouglas = this.handleDouglas.bind(this);\n  }\n\n  handleItalo = () => {\n    this.setState((estadoAnterior, _props) => ({\n      numeroDeItalos: estadoAnterior.numeroDeItalos + 1,\n    }));\n  };\n\n  handleDouglas = () => {\n    this.setState((estadoAnterior, _props) => ({\n      numeroDeDouglas: estadoAnterior.numeroDeDouglas + 1,\n    }))\n  }\n  handleClick = () => {\n    /* Você **NUNCA** deve fazer atribuições diretamente a `this.state`. Deve,\n    ao invés disso, SEMPRE utilizar a função `this.setState(novoEstado)` do\n    React*/\n    this.setState((estadoAnterior, _props) => ({\n      numeroDeCliques: estadoAnterior.numeroDeCliques + 1,\n    }));\n  };\n\n  classColors = (num) => num % 2 === 0 ? 'green' : 'white';\n\n  render() {\n    const { numeroDeCliques, numeroDeItalos, numeroDeDouglas } = this.state;\n    /*Para LER o estado, você pode usar `this.state.chaveDoMeuEstado`*/\n    return (\n      <div className='App'>\n      <button \n      onClick={this.handleClick}\n      style={{ backgroundColor: this.classColors(numeroDeCliques) }}\n      >Botao: {this.state.numeroDeCliques}</button>\n      <button \n      onClick={this.handleDouglas}\n      style={{ backgroundColor: this.classColors(numeroDeDouglas)}}>Botao:{this.state.numeroDeDouglas}</button>\n      <button onClick={this.handleItalo}\n      style={{ backgroundColor: this.classColors(numeroDeItalos)}}>Botao:{this.state.numeroDeItalos}</button>\n      </div>\n    \n    );\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}