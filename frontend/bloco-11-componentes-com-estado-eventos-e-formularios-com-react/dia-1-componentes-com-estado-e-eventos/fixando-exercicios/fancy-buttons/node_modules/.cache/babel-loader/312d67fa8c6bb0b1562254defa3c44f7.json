{"ast":null,"code":"var _jsxFileName = \"/home/viieorathi/trybe-exercicios/frontend/bloco-11-componentes-com-estado-eventos-e-formularios-com-react/dia-1-componentes-com-estado-e-eventos/fixando-exercicios/fancy-buttons/src/App.js\";\nimport React from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    /* Para definir um estado inicial ao componente, a ser definido\n    no momento em que o componente for colocado na tela, faça uma atribuição\n    de um objeto à chave `state` do `this`, ou seja, ao `this.state`*/\n\n    this.handleItalo = () => {\n      this.setState((estadoAnterior, _props) => ({\n        numeroDeItalos: estadoAnterior.numeroDeItalos + 1\n      }), () => {\n        console.log(`Botao Italo: ${this.classColors(this.state.numeroDeItalos)}`);\n      });\n    };\n\n    this.handleDouglas = () => {\n      this.setState((estadoAnterior, _props) => ({\n        numeroDeDouglas: estadoAnterior.numeroDeDouglas + 1\n      }), () => {\n        console.log(`Botao Douglas: ${this.classColors(this.state.numeroDeDouglas)}`);\n      });\n    };\n\n    this.handleClick = () => {\n      /* Você **NUNCA** deve fazer atribuições diretamente a `this.state`. Deve,\n      ao invés disso, SEMPRE utilizar a função `this.setState(novoEstado)` do\n      React*/\n      this.setState((estadoAnterior, _props) => ({\n        numeroDeCliques: estadoAnterior.numeroDeCliques + 1\n      }), () => {\n        console.log(`Botao Click: ${this.classColors(this.state.numeroDeCliques)}`);\n      });\n    };\n\n    this.classColors = num => num % 2 === 0 ? \"green\" : \"white\";\n\n    this.state = {\n      numeroDeCliques: 0,\n      numeroDeItalos: 0,\n      numeroDeDouglas: 0\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleItalo = this.handleItalo.bind(this);\n    this.handleDouglas = this.handleDouglas.bind(this);\n  }\n\n  render() {\n    const {\n      numeroDeCliques,\n      numeroDeItalos,\n      numeroDeDouglas\n    } = this.state;\n    /*Para LER o estado, você pode usar `this.state.chaveDoMeuEstado`*/\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        style: {\n          backgroundColor: this.classColors(numeroDeCliques)\n        },\n        children: [\"Botao: \", this.state.numeroDeCliques]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleDouglas,\n        style: {\n          backgroundColor: this.classColors(numeroDeDouglas)\n        },\n        children: [\"Botao:\", this.state.numeroDeDouglas]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleItalo,\n        style: {\n          backgroundColor: this.classColors(numeroDeItalos)\n        },\n        children: [\"Botao:\", this.state.numeroDeItalos]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/viieorathi/trybe-exercicios/frontend/bloco-11-componentes-com-estado-eventos-e-formularios-com-react/dia-1-componentes-com-estado-e-eventos/fixando-exercicios/fancy-buttons/src/App.js"],"names":["React","App","Component","constructor","handleItalo","setState","estadoAnterior","_props","numeroDeItalos","console","log","classColors","state","handleDouglas","numeroDeDouglas","handleClick","numeroDeCliques","num","bind","render","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    /* Para definir um estado inicial ao componente, a ser definido\n    no momento em que o componente for colocado na tela, faça uma atribuição\n    de um objeto à chave `state` do `this`, ou seja, ao `this.state`*/\n    this.state = {\n      numeroDeCliques: 0,\n      numeroDeItalos: 0,\n      numeroDeDouglas: 0,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleItalo = this.handleItalo.bind(this);\n    this.handleDouglas = this.handleDouglas.bind(this);\n  }\n\n  handleItalo = () => {\n    this.setState(\n      (estadoAnterior, _props) => ({\n        numeroDeItalos: estadoAnterior.numeroDeItalos + 1,\n      }),\n      () => {\n        console.log(\n          `Botao Italo: ${this.classColors(this.state.numeroDeItalos)}`\n        );\n      }\n    );\n  };\n\n  handleDouglas = () => {\n    this.setState(\n      (estadoAnterior, _props) => ({\n        numeroDeDouglas: estadoAnterior.numeroDeDouglas + 1,\n      }),\n      () => {\n        console.log(\n          `Botao Douglas: ${this.classColors(this.state.numeroDeDouglas)}`\n        );\n      }\n    );\n  };\n  handleClick = () => {\n    /* Você **NUNCA** deve fazer atribuições diretamente a `this.state`. Deve,\n    ao invés disso, SEMPRE utilizar a função `this.setState(novoEstado)` do\n    React*/\n    this.setState(\n      (estadoAnterior, _props) => ({\n        numeroDeCliques: estadoAnterior.numeroDeCliques + 1,\n      }),\n      () => {\n        console.log(\n          `Botao Click: ${this.classColors(this.state.numeroDeCliques)}`\n        );\n      }\n    );\n  };\n\n  classColors = (num) => (num % 2 === 0 ? \"green\" : \"white\");\n\n  render() {\n    const { numeroDeCliques, numeroDeItalos, numeroDeDouglas } = this.state;\n    /*Para LER o estado, você pode usar `this.state.chaveDoMeuEstado`*/\n    return (\n      <div className=\"App\">\n        <button\n          onClick={this.handleClick}\n          style={{ backgroundColor: this.classColors(numeroDeCliques) }}\n        >\n          Botao: {this.state.numeroDeCliques}\n        </button>\n        <button\n          onClick={this.handleDouglas}\n          style={{ backgroundColor: this.classColors(numeroDeDouglas) }}\n        >\n          Botao:{this.state.numeroDeDouglas}\n        </button>\n        <button\n          onClick={this.handleItalo}\n          style={{ backgroundColor: this.classColors(numeroDeItalos) }}\n        >\n          Botao:{this.state.numeroDeItalos}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}